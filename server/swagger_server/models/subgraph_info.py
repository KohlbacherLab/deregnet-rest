# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SubgraphInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, num_nodes: int=None, num_edges: int=None):  # noqa: E501
        """SubgraphInfo - a model defined in Swagger

        :param id: The id of this SubgraphInfo.  # noqa: E501
        :type id: str
        :param num_nodes: The num_nodes of this SubgraphInfo.  # noqa: E501
        :type num_nodes: int
        :param num_edges: The num_edges of this SubgraphInfo.  # noqa: E501
        :type num_edges: int
        """
        self.swagger_types = {
            'id': str,
            'num_nodes': int,
            'num_edges': int
        }

        self.attribute_map = {
            'id': 'id',
            'num_nodes': 'num_nodes',
            'num_edges': 'num_edges'
        }

        self._id = id
        self._num_nodes = num_nodes
        self._num_edges = num_edges

    @classmethod
    def from_dict(cls, dikt) -> 'SubgraphInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SubgraphInfo of this SubgraphInfo.  # noqa: E501
        :rtype: SubgraphInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this SubgraphInfo.

        Subgraph Id  # noqa: E501

        :return: The id of this SubgraphInfo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this SubgraphInfo.

        Subgraph Id  # noqa: E501

        :param id: The id of this SubgraphInfo.
        :type id: str
        """

        self._id = id

    @property
    def num_nodes(self) -> int:
        """Gets the num_nodes of this SubgraphInfo.

        Number of nodes in subgraph  # noqa: E501

        :return: The num_nodes of this SubgraphInfo.
        :rtype: int
        """
        return self._num_nodes

    @num_nodes.setter
    def num_nodes(self, num_nodes: int):
        """Sets the num_nodes of this SubgraphInfo.

        Number of nodes in subgraph  # noqa: E501

        :param num_nodes: The num_nodes of this SubgraphInfo.
        :type num_nodes: int
        """

        self._num_nodes = num_nodes

    @property
    def num_edges(self) -> int:
        """Gets the num_edges of this SubgraphInfo.

        Number of edges in subgraph  # noqa: E501

        :return: The num_edges of this SubgraphInfo.
        :rtype: int
        """
        return self._num_edges

    @num_edges.setter
    def num_edges(self, num_edges: int):
        """Sets the num_edges of this SubgraphInfo.

        Number of edges in subgraph  # noqa: E501

        :param num_edges: The num_edges of this SubgraphInfo.
        :type num_edges: int
        """

        self._num_edges = num_edges
