/**
 * DeRegNet REST API
 * DeRegNet REST API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: deregnet@informatik.uni-tuebingen.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DeRegNetRestApi);
  }
}(this, function(expect, DeRegNetRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DeRegNetRestApi.ParameterSetApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ParameterSetApi', function() {
    describe('deleteParameterSet', function() {
      it('should call deleteParameterSet successfully', function(done) {
        //uncomment below and update the code to test deleteParameterSet
        //instance.deleteParameterSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getParameterSet', function() {
      it('should call getParameterSet successfully', function(done) {
        //uncomment below and update the code to test getParameterSet
        //instance.getParameterSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getParameterSetData', function() {
      it('should call getParameterSetData successfully', function(done) {
        //uncomment below and update the code to test getParameterSetData
        //instance.getParameterSetData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getParameterSetDefault', function() {
      it('should call getParameterSetDefault successfully', function(done) {
        //uncomment below and update the code to test getParameterSetDefault
        //instance.getParameterSetDefault(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getParameterSetDefaultData', function() {
      it('should call getParameterSetDefaultData successfully', function(done) {
        //uncomment below and update the code to test getParameterSetDefaultData
        //instance.getParameterSetDefaultData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getParameterSets', function() {
      it('should call getParameterSets successfully', function(done) {
        //uncomment below and update the code to test getParameterSets
        //instance.getParameterSets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postParameterSet', function() {
      it('should call postParameterSet successfully', function(done) {
        //uncomment below and update the code to test postParameterSet
        //instance.postParameterSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
