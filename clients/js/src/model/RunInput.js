/**
 * DeRegNet REST API
 * DeRegNet REST API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: deregnet@informatik.uni-tuebingen.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import ParameterSet from './ParameterSet';





/**
* The RunInput model module.
* @module model/RunInput
* @version 1.0.0
*/
export default class RunInput {
    /**
    * Constructs a new <code>RunInput</code>.
    * @alias module:model/RunInput
    * @class
    * @param graphId {String} Id of graph underlying the run
    * @param scoreId {String} Id of node score used in the run
    */

    constructor(graphId, scoreId) {
        

        
        

        this['graph_id'] = graphId;this['score_id'] = scoreId;

        
    }

    /**
    * Constructs a <code>RunInput</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/RunInput} obj Optional instance to populate.
    * @return {module:model/RunInput} The populated <code>RunInput</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RunInput();

            
            
            

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('parameter_set_id')) {
                obj['parameter_set_id'] = ApiClient.convertToType(data['parameter_set_id'], 'String');
            }
            if (data.hasOwnProperty('parameter_set')) {
                obj['parameter_set'] = ParameterSet.constructFromObject(data['parameter_set']);
            }
            if (data.hasOwnProperty('graph_id')) {
                obj['graph_id'] = ApiClient.convertToType(data['graph_id'], 'String');
            }
            if (data.hasOwnProperty('score_id')) {
                obj['score_id'] = ApiClient.convertToType(data['score_id'], 'String');
            }
            if (data.hasOwnProperty('receptors_id')) {
                obj['receptors_id'] = ApiClient.convertToType(data['receptors_id'], 'String');
            }
            if (data.hasOwnProperty('terminals_id')) {
                obj['terminals_id'] = ApiClient.convertToType(data['terminals_id'], 'String');
            }
            if (data.hasOwnProperty('root')) {
                obj['root'] = ApiClient.convertToType(data['root'], 'String');
            }
        }
        return obj;
    }

    /**
    * Description of run
    * @member {String} description
    */
    description = undefined;
    /**
    * Id of a parameter set to run the algorithm with
    * @member {String} parameter_set_id
    */
    parameter_set_id = undefined;
    /**
    * @member {module:model/ParameterSet} parameter_set
    */
    parameter_set = undefined;
    /**
    * Id of graph underlying the run
    * @member {String} graph_id
    */
    graph_id = undefined;
    /**
    * Id of node score used in the run
    * @member {String} score_id
    */
    score_id = undefined;
    /**
    * Id of a node set acting as receptors in the run
    * @member {String} receptors_id
    */
    receptors_id = undefined;
    /**
    * Id of a node set acting as terminals in the run
    * @member {String} terminals_id
    */
    terminals_id = undefined;
    /**
    * Node id of a fixed root node
    * @member {String} root
    */
    root = undefined;








}


