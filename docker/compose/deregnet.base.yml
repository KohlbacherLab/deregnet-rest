version: '3'
services:
  deregnet-rest:
    image: sebwink/deregnet-rest
    build: 
      context: ../..
    environment:
      HOST: 0.0.0.0
      PORT: 8080
    restart: on-failure
    networks:
      - deregnet 
    depends_on:
      - redis 
      - mongodb
  deregnet-docs:
    image: sebwink/swagger-docs 
    build:
      context: ../..
      dockerfile: ./docs/Dockerfile 
    environment:
      SWAGGER_DOCS_SPEC: /app/specs/swagger.json 
      SWAGGER_DOCS_NAME: deregnet 
      SWAGGER_DOCS_AUTH: basic
    volumes:
      - '../../server/deregnet_rest/swagger:/app/specs'
    networks:
      - deregnet
  ndex-graphml:
    image: sebwink/ndex-graphml
    build: 
      context: ../../upstream/ndex-graphml
    environment:
      HOST: 0.0.0.0
      PORT: 5000
    networks:
      - deregnet
  ndex-graphml-docs:
    image: sebwink/swagger-docs 
    build:
      context: ../..
      dockerfile: ./docs/Dockerfile
    environment:
      SWAGGER_DOCS_SPEC: /app/specs/ndex-graphml.json 
      SWAGGER_DOCS_NAME: ndex-graphml 
      SWAGGER_DOCS_AUTH: basic
    volumes:
      - '../../upstream/ndex-graphml/server/swagger:/app/specs'
    networks:
      - deregnet
  kong-migrations:
    image: sebwink/kong
    build:
      context: ../kong
    command: kong migrations bootstrap
    depends_on:
      - postgres
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: postgres
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
    networks:
      - deregnet
  kong:
    image: sebwink/kong
    build:
      context: ../kong
    depends_on:
      - kong-migrations
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_CASSANDRA_CONTACT_POINTS: kong-db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: postgres
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
    networks:
      - deregnet
    ports:
      - '443:8443/tcp'
    restart: on-failure 
  kong-ssl:
    image: sebwink/kong-ssl 
    build:
      context: ../kong-ssl 
    environment:
      SSL_CERT: /.secrets/ssl.crt 
      SSL_KEY: /.secrets/ssl.key 
    volumes:
      - '../../.secrets:/.secrets'
    depends_on:
      - kong
    networks:
      - deregnet
  deregnet-kong-setup:
    image: sebwink/deregnet-kong-setup
    build:
      context: ../setup-deregnet
    depends_on:
      - kong
    networks:
      - deregnet
  ndex-graphml-kong-setup:
    image: sebwink/ndex-graphml-kong-setup
    build:
      context: ../setup-ndex-graphml
    depends_on:
      - kong
    networks:
      - deregnet
  kong-admin-api:
    image: sebwink/kong-admin-api
    build:
      context: ../kong-admin-api 
    environment:
      KONG_ADMIN_USER: deregnet
    depends_on:
      - kong
    networks:
      - deregnet
  kong-auth:
    image: sebwink/kong-auth 
    build: 
      context: ../../auth
    env_file:
      - '../../.secrets/kong.auth.env'
    volumes:
      - '../../auth:/app'
    depends_on:
      - kong                  
      - mongodb
    networks:
      - deregnet
  kong-auth-setup:
    image: sebwink/kong-auth-setup 
    build:
      context: ../../auth/docker/setup 
    depends_on:
      - kong
    networks:
      - deregnet
  konga:
    image: pantsel/konga:next
    depends_on:
      - kong
    environment:
      NODE_ENV: production
      TOKEN_SECRET: test123
      DB_ADAPTER: mongo
      DB_HOST: mongodb 
      KONGA_SEED_USER_DATA_SOURCE_FILE: /.secrets/konga.user.seed 
    volumes:
      - '../../.secrets:/.secrets'
    networks:
      - deregnet
  konga-setup:
    image: sebwink/konga-setup
    build:
      context: ../setup-konga
    depends_on:
      - kong
    networks:
      - deregnet
networks:
  deregnet:
    external: True
