version: "3"
services:
  kong-db:
    image: postgres:9.6
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
    healthcheck:  
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}", "-d", "${KONG_PG_DATABASE:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
  kong-migrations:
    image: sebwink/kong
    build:
      context: ../docker/kong
    command: kong migrations bootstrap
    depends_on:
      - kong-db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
    links:
      - kong-db
  kong:
    image: sebwink/kong
    build:
      context: ../docker/kong
    depends_on:
      - kong-migrations
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_CASSANDRA_CONTACT_POINTS: kong-db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
    links:
      - kong-db
    ports:
      - '8000:8000/tcp'
      - '8443:8443/tcp'
    restart: on-failure
  db:
    image: mongo 
  kong-auth:
    image: sebwink/kong-auth 
    build: .
    env_file:
      - './.env'
    volumes:
      - '.:/app'
    depends_on:
      - kong                  
      - db
  kong-auth-setup:
    image: sebwink/kong-auth-setup 
    build:
      context: ./docker/setup 
    depends_on:
      - kong
