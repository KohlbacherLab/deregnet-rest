version: '3'
services:
  mongodb:
    image: mongo 
  deregnet-redis:
    image: redis
  deregnet-rest:
    image: sebwink/deregnet-rest
    build: . 
    environment:
      HOST: 0.0.0.0
      PORT: 8080
    restart: on-failure
    links:
      - mongodb
      - 'deregnet-redis:redis'
      - apm-server
  deregnet-docs:
    image: sebwink/swagger-docs 
    build:
      context: .
      dockerfile: ./docs/Dockerfile 
    environment:
      SWAGGER_DOCS_SPEC: /app/specs/swagger.json 
      SWAGGER_DOCS_NAME: deregnet 
      SWAGGER_DOCS_AUTH: basic
    volumes:
      - './server/deregnet_rest/swagger:/app/specs'
  ndex-graphml:
    image: sebwink/ndex-graphml
    build: 
      context: ndex-graphml
    environment:
      HOST: 0.0.0.0
      PORT: 5000
  ndex-graphml-docs:
    image: sebwink/swagger-docs 
    build:
      context: .
      dockerfile: ./docs/Dockerfile
    environment:
      SWAGGER_DOCS_SPEC: /app/specs/ndex-graphml.json 
      SWAGGER_DOCS_NAME: ndex-graphml 
      SWAGGER_DOCS_AUTH: basic
    volumes:
      - './ndex-graphml/server/swagger:/app/specs'
  kong-db:
    image: postgres:9.6
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
    healthcheck:  
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}", "-d", "${KONG_PG_DATABASE:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
  kong-migrations:
    image: sebwink/kong
    build:
      context: ./docker/kong
    command: kong migrations bootstrap
    depends_on:
      - kong-db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
    links:
      - kong-db
  kong:
    image: sebwink/kong
    build:
      context: ./docker/kong
    depends_on:
      - kong-migrations
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_CASSANDRA_CONTACT_POINTS: kong-db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
    links:
      - kong-db
    ports:
      - '8443:8443/tcp'
    restart: on-failure 
  kong-ssl:
    image: sebwink/kong-ssl 
    build:
      context: ./docker/kong-ssl 
    environment:
      SSL_CERT: /.secrets/ssl.crt 
      SSL_KEY: /.secrets/ssl.key 
    volumes:
      - './.secrets:/.secrets'
    depends_on:
      - kong
    links:
      - kong
  deregnet-kong-setup:
    image: sebwink/deregnet-kong-setup
    build:
      context: ./docker/setup-deregnet
    depends_on:
      - kong
    links:
      - kong
  ndex-graphml-kong-setup:
    image: sebwink/ndex-graphml-kong-setup
    build:
      context: ./docker/setup-ndex-graphml
    depends_on:
      - kong
    links:
      - kong
  kong-admin-api:
    image: sebwink/kong-admin-api
    build:
      context: ./docker/kong-admin-api 
    environment:
      KONG_ADMIN_USER: deregnet
    depends_on:
      - kong
    links:
      - kong
  kong-auth:
    image: sebwink/kong-auth 
    build: 
      context: ./auth
    env_file:
      - './.secrets/kong.auth.env'
    volumes:
      - './auth:/app'
    depends_on:
      - kong                  
      - mongodb
  kong-auth-setup:
    image: sebwink/kong-auth-setup 
    build:
      context: ./auth/docker/setup 
    depends_on:
      - kong
  konga:
    image: pantsel/konga:next
    depends_on:
      - kong
    environment:
      NODE_ENV: production
      TOKEN_SECRET: test123
      DB_ADAPTER: mongo
      DB_HOST: mongodb 
      KONGA_SEED_USER_DATA_SOURCE_FILE: /.secrets/konga.user.seed 
    volumes:
      - './.secrets:/.secrets'
    links:
      - kong
      - mongodb    
  konga-setup:
    image: sebwink/konga-setup
    build:
      context: ./docker/setup-konga
    depends_on:
      - kong
    links:
      - kong 
  logstash:
    image: docker.elastic.co/logstash/logstash:6.6.0
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.6.0
    environment:
      #- bootstrap.memory_lock=true 
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    volumes:
      - '.data/elasticsearch:/usr/share/elasticsearch/data/'
  kibana:
    image: docker.elastic.co/kibana/kibana:6.6.0
    ports:
      - '5601:5601/tcp'
  apm-server:
    image: docker.elastic.co/apm/apm-server:6.6.0
